# Generated by Django 3.0.2 on 2020-01-20 16:46

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlarmType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='trouble')),
            ],
            options={
                'verbose_name': 'AlarmType',
                'verbose_name_plural': 'AlarmTypes',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block', models.CharField(max_length=3, verbose_name='Block')),
            ],
            options={
                'verbose_name': 'Block',
                'verbose_name_plural': 'Blocks',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Model')),
                ('serial_number', models.CharField(max_length=100, verbose_name='Serial number')),
                ('manual', models.FileField(upload_to='manual/', verbose_name='Manual')),
                ('inventory_number', models.CharField(max_length=20, verbose_name='Inventory number')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipments',
            },
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.CharField(max_length=2, verbose_name='Floor')),
                ('room', models.CharField(max_length=6, verbose_name='room')),
                ('block', models.ManyToManyField(to='equipment.Block', verbose_name='Block')),
            ],
            options={
                'verbose_name': 'Laboratory',
                'verbose_name_plural': 'Laboratories',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('country', models.CharField(max_length=50, verbose_name='Country')),
                ('email', models.EmailField(max_length=254, verbose_name='')),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('temp1', models.FloatField(verbose_name='Temp-1')),
                ('temp2', models.FloatField(verbose_name='Temp-2')),
                ('temp3', models.FloatField(verbose_name='Temp-3')),
                ('leak1', models.BooleanField(default=False, verbose_name='Leak-1')),
                ('leak2', models.BooleanField(default=False, verbose_name='Leak-2')),
                ('leak3', models.BooleanField(default=False, verbose_name='Leak-3')),
                ('date_of_installation', models.DateField(default=datetime.date.today, verbose_name='Date of installation')),
                ('date_of_last_service', models.DateField(default=datetime.date.today, verbose_name='Date of last service')),
                ('inventory_number', models.CharField(max_length=20, verbose_name='Inventory nimber')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Equipment', verbose_name='Equipment')),
                ('lab', models.ManyToManyField(to='equipment.Laboratory', verbose_name='Laboratory')),
            ],
            options={
                'verbose_name': 'Node',
                'verbose_name_plural': 'Nodes',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_service', models.DateField(default=datetime.date.today, verbose_name='last service')),
                ('spares', models.CharField(max_length=150, verbose_name='Spares')),
                ('what_is_done', models.TextField(verbose_name='What is done')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Equipment', verbose_name='equipment')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked', models.BooleanField(default=False, verbose_name='Checked')),
                ('mailWasSent', models.BooleanField(default=False, verbose_name='Inform')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Node', verbose_name='Node')),
                ('type', models.ManyToManyField(to='equipment.AlarmType', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Manufacturer', verbose_name='Manufacturer'),
        ),
    ]
